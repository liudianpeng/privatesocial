<?php

namespace Proxies\__CG__\Slackiss\Bundle\AVShareBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Resource extends \Slackiss\Bundle\AVShareBundle\Entity\Resource implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'id', 'uid', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'title', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'content', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'face', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'faceAttach', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'picture', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'picture1', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'pictureAttach', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'picture1Attach', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'member', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'created', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'modified', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'status', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'enabled', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'download', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'code');
        }

        return array('__isInitialized__', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'id', 'uid', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'title', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'content', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'face', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'faceAttach', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'picture', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'picture1', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'pictureAttach', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'picture1Attach', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'member', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'created', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'modified', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'status', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'enabled', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'download', '' . "\0" . 'Slackiss\\Bundle\\AVShareBundle\\Entity\\Resource' . "\0" . 'code');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Resource $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setFaceAttach($faceAttach)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFaceAttach', array($faceAttach));

        return parent::setFaceAttach($faceAttach);
    }

    /**
     * {@inheritDoc}
     */
    public function getFaceAttach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFaceAttach', array());

        return parent::getFaceAttach();
    }

    /**
     * {@inheritDoc}
     */
    public function setPictureAttach($pictureAttach)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPictureAttach', array($pictureAttach));

        return parent::setPictureAttach($pictureAttach);
    }

    /**
     * {@inheritDoc}
     */
    public function getPictureAttach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPictureAttach', array());

        return parent::getPictureAttach();
    }

    /**
     * {@inheritDoc}
     */
    public function setPicture1Attach($picture1Attach)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicture1Attach', array($picture1Attach));

        return parent::setPicture1Attach($picture1Attach);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture1Attach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture1Attach', array());

        return parent::getPicture1Attach();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setFace($face)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFace', array($face));

        return parent::setFace($face);
    }

    /**
     * {@inheritDoc}
     */
    public function getFace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFace', array());

        return parent::getFace();
    }

    /**
     * {@inheritDoc}
     */
    public function setPicture($picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicture', array($picture));

        return parent::setPicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture', array());

        return parent::getPicture();
    }

    /**
     * {@inheritDoc}
     */
    public function setMember($member)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMember', array($member));

        return parent::setMember($member);
    }

    /**
     * {@inheritDoc}
     */
    public function getMember()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMember', array());

        return parent::getMember();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setModified($modified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModified', array($modified));

        return parent::setModified($modified);
    }

    /**
     * {@inheritDoc}
     */
    public function getModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModified', array());

        return parent::getModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($enabled));

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', array());

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setDownload($download)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDownload', array($download));

        return parent::setDownload($download);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownload', array());

        return parent::getDownload();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setUid($uid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUid', array($uid));

        return parent::setUid($uid);
    }

    /**
     * {@inheritDoc}
     */
    public function getUid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUid', array());

        return parent::getUid();
    }

    /**
     * {@inheritDoc}
     */
    public function setPicture1($picture1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicture1', array($picture1));

        return parent::setPicture1($picture1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture1', array());

        return parent::getPicture1();
    }

}
